<div class="bupborderlayout" fit="true">
<style type="text/css">
.file_type, .file_operator{height:30px; line-height:30px; list-style:none; margin:0; padding:0; white-space:nowrap;vertical-align:middle;}
.file_type_icon{vertical-align:middle;margin:0 10px 5px 75px;display:inline-block;width:16px;height:16px;}
.file_operator_close{background:none repeat scroll 0 0 #e2e2e2; color:gray; cursor:default;}
.active{background:none repeat scroll 0 0 #0092dc; color:#fff; cursor:pointer;}
.hover {background:none repeat scroll 0 0 #e2e2e2; color:#1d60ff; cursor:pointer;}
</style>
<div data-settings="zone:'north',border:false"  style="background:#fafafa;height:40px;padding:2px;margin:0px;overflow:hide;">
<!-- <form action="#" method="post" style="padding:0;" id="conditionForm"> -->
<table style="padding:0px;margin:0px;">
  <tr>
  	<th align="right" style="width:80px;">文件名：</td>
    <td><input type="text" name="searchName" id="searchName"/></td>
    <th align="right" style="width:80px;">时间 从：</td>
    <td><input type="text" name="searchStartAt" id="searchStartAt" /></td>
    <th align="right" style="width:80px;">到：</td>
    <td><input type="text" name="searchEndAt" id="searchEndAt" /></td>
    <td></td><td></td>
    <td><a href="javascript:void(null);" id="btnSearch">搜索</a></td>
  </tr>
</table>
<!-- </form>	 -->
</div>
<div data-settings="zone:'center',border:false"><table id="directoryFile"></table></div>

<div data-settings="zone:'east',border:true" style="width:210px;overflow:hidden;">
	<font color='gray' style="font-size:12px;">双击:重命名、拖动:改位置、右击:菜单</font>
<div style='width:100%;height:52%;overflow:auto;'>
	<ul id="directory"></ul>
	<div id="mm" class="bupmenu" style="width:120px;">
		<div onclick="append()" data-settings="iconClassname:'icon-add'">添加</div>
		<div onclick="update()">修改</div>
		<div onclick="removeit()" data-settings="iconClassname:'icon-remove'">删除</div>
		<div class="bupmenuSeparator"></div>
		<div onclick="expand(false)">Expand</div>
		<div onclick="collapse(false)">Collapse</div>
		<div onclick="expand(true)">Expand All</div>
		<div onclick="collapse(true)">Collapse All</div>
	</div>
</div>
<div style='width:100%;height:46%;text-align:left;font-size:14px;color:#333;'><!--background:#F0F0F0; #E2E2E2-->
	
	<ul style='list-style:none; margin:0px; padding:0px;'>
		<li style='height:0;line-height:0; border-top:1px solid #ccc;margin:5px auto;list-style:none outside none;'></li>
		<li class='file_type active'><span><input type='hidden' value='-1'/><span class='file_type_icon' style='background:url(/res/images/all_16.png) center no-repeat;'></span>全部</span></li>
		<li class='file_type'><span><input type='hidden' value='-2'/><span class='file_type_icon' style='background:url(/res/images/recent_16.png) center no-repeat;'></span>最近</span></li>
		<li class='file_type'><span><input type='hidden' value='0'/><span class='file_type_icon' style='background:url(/res/images/doc_16.png) center no-repeat;'></span>文档</span></li>
		<li class='file_type'><span><input type='hidden' value='1'/><span class='file_type_icon' style='background:url(/res/images/image_16.png) center no-repeat;'></span>图片</span></li>
		<li class='file_type'><span><input type='hidden' value='2'/><span class='file_type_icon' style='background:url(/res/images/music_16.png) center no-repeat;'></span>音频</span></li>
		<li class='file_type'><span><input type='hidden' value='3'/><span class='file_type_icon' style='background:url(/res/images/video_16.png) center no-repeat;'></span>视频</span></li>
		<li style='height:0;line-height:0; border-top:1px solid #ccc;margin:5px auto;list-style:none outside none;'></li>
		<li id='file_move' class='file_operator file_operator_close'><span><span class='file_type_icon' style='background:url(/res/images/move.png) center no-repeat;'></span>移动到...</span></li>
		<li id='file_copy' class='file_operator'><span><span class='file_type_icon' style='background:url(/res/images/copy.png) center no-repeat;'></span>复制到...</span></li>
	</ul>
</div>
<input type='hidden' id='current_file_type' value='-1'/>
</div>
<div id='file_dlg' style="display:none;"></div>
</div>
<script type="text/javascript">
var P = {
	tree:jQuery("#directory"),
	grid:jQuery('#directoryFile'),
	D:jQuery('#file_dlg'),
	N:0,
	f:function(){
		P.grid.bupgrid("reload");
		return false;
	}
}
function share() {
	var node = P.tree.buptree('getSelected');
	var node_id = node.id;
	if (node_id == 0) {
		alert('该节点不允许分享！');
		return;
	}
	return false;
}
function append(){
    var node = P.tree.buptree('getSelected');
    var name = node.text + "";
    //var os = name.indexOf("<");
    //if(os > 0){
    //	name = name.substring(0, os);
    //}
	P.D.load('directory.editor',{parent_id:node.id,parent_name:name});
}
function update() {
	var node = P.tree.buptree('getSelected');
	var node_id = node.id;
	if (node_id == 0 || node.disabled) {
		alert('该节点不允许修改！');
		return;
	}
	P.D.load('directory.editor?id=' + node_id);
}
function removeit(){
	// 该目录下存在子目录或文件，不允许删除！
    var node = P.tree.buptree('getSelected');
    var node_id = node.id;
	if (node_id == 0 || node.disabled) {
		alert('该节点不允许删除！');
		return;
	}
	lock('正在删除目录...');
    jQuery.ajax({
    	url : 'directory.remove',
    	type : 'post',
    	data : {id : node_id},
    	success : function(rd) {
			jQuery.unblockUI();
    		if (typeof rd === "string")
				rd = jQuery.parseJSON(rd); 
			if(rd.error){
				jQuery.bupmsg.alert('提示', rd.msg, 'error');
				return;
			}
			//jQuery('#directory').buptree('reload');
			// 删除后刷新dg..........................................
			var p = P.tree.buptree('getParent');
			if(p && p.target){
				P.tree.buptree('select', p.target);
				P.grid.bupgrid("reload", {
					searchDirectory : p.id,
					searchType : jQuery('#current_file_type').val(),
					searchName : jQuery('#searchName').val(),
					searchStartAt : jQuery('#searchStartAt').bupdateinput('getValue'),
					searchEndAt : jQuery('#searchEndAt').bupdateinput('getValue')
				});
			}
    		P.tree.buptree('remove', node.target);
		}
    });
}
function collapse(a){
	if(a){
		P.tree.buptree("collapseAll");
	}else{
	    var node = P.tree.buptree('getSelected');
	    P.tree.buptree('collapse', node.target);
    }
}
function expand(a){
	if(a){
		P.tree.buptree("expandAll");
	}else{
	    var node = P.tree.buptree('getSelected');
	    P.tree.buptree('expand', node.target);
    }
}

// 目录、类型、条件查找
function fn_reload_dg_condition() {
	var node = P.tree.buptree('getSelected');
	var node_id = (node != null && node.id > 0) ? node.id : null;
	P.grid.bupgrid("reload", {
		searchDirectory : node_id,
		searchType : jQuery('#current_file_type').val(),
		searchName : jQuery('#searchName').val(),
		searchStartAt : jQuery('#searchStartAt').bupdateinput('getValue'),
		searchEndAt : jQuery('#searchEndAt').bupdateinput('getValue')
	});
	return false;
}

function fn_clear_condition() {
	jQuery('#searchName').val('');
	jQuery('#searchStartAt').bupdateinput('setValue', '');
	jQuery('#searchEndAt').bupdateinput('setValue', '');
}

// 目录、类型查找
function fn_reload_dg() {
	var node = P.tree.buptree('getSelected');
	var node_id = (node != null && node.id > 0) ? node.id : null;
	var type = jQuery('#current_file_type').val();
	P.grid.bupgrid('reload', {searchDirectory : node_id, searchType : type});
	return false;
}

jQuery(function() {
	jQuery('#searchStartAt, #searchEndAt').bupdateinput();
	jQuery('#btnSearch').click(fn_reload_dg_condition).bupabutton({iconClassname : 'icon_search', flat : true});
	
	P.tree.buptree({
		url : 'directory.node?_=$!{currentTimeMillis}',
		onSelect : function(node){
			P.N = node.id;
		},
		onLoadSuccess : function(node, data) {
			// 加载成功默认选中根节点
			P.tree.buptree("collapseAll");
			if(P.N > 0){
				var n = P.tree.buptree('find', P.N);
				if(n && n.id){
					P.tree.buptree('select', n.target);
					P.tree.buptree('scrollTo', n.target);
					P.tree.buptree('expandTo', n.target);
					return;
				}
			}
			var root_node = P.tree.buptree('getRoot');
			P.tree.buptree('select', root_node.target);
			P.tree.buptree('expand', root_node.target);
		},
		onClick : function(node) {
			fn_clear_condition();
			fn_reload_dg();
			var node_id = node.id;
			if (node_id == 0) {
				jQuery('#file_move').addClass('file_operator_close');
			} else {
				jQuery('#file_move').removeClass('file_operator_close');
			}
		},
		animate : true,
		lines : true,
		dnd : true,
		onContextMenu: function(e,node){
			e.preventDefault();
            jQuery(this).buptree('select',node.target);
            jQuery('#mm').bupmenu('show',{
                left: e.pageX,
                top: e.pageY
            });
        },
        onDblClick : function(node){
        	if (node.id == 0 || node.disabled) {
        		return;
        	}
            jQuery(this).buptree('beginEdit', node.target);
        },
        formatter : function(node){
            var s = node.text;
            var c = '';
            if(node.share == 1){
            	c = '<img width="12" height="12" src="/res/images/share_16.png" title="已共享"/>';
            }else if(node.share == 2){
            	if(c !== ''){c += ' ';}
            	c += '<img width="12" height="12" src="/res/images/private-folder.png" title="私有目录"/>';
            }
            if(node.disabled){
            	if(c !== ''){c += ' ';}
            	c += '<img width="12" height="12" src="/res/images/disabled-edit.png" title="禁止编辑"/>';
            }
            if(c !== ''){
            	s += ' [' + c + ']';
            }else{
            	s += ' ';
            }
            if (node.children){
                s += '<span style="color:blue" title="子目录数">(' + node.children.length + ')</span>';
            }
            return s;
        },
        onAfterEdit : function(node) {
        	var node_id = node.id;
        	var node_text = node.text;
        	jQuery.ajax({
				url : 'directory.rename',
				type : 'post',
				data : { node_id : node_id, node_text : node_text},
				success : function(rd) {
					if (typeof rd === "string")
						rd = jQuery.parseJSON(rd);
					if(rd.error){
						jQuery.bupmsg.alert('提示', rd.msg, 'error');
						return;
					}
				}
			});
        },
        onBeforeDrag : function(node){
        	if(node.id == 0 || node.disabled){
        		return false;
        	}
        	return true;
        },
        onDragEnter : function(target, source) {
        	var node = P.tree.buptree('getNode', target);
        	if(node.id == 0 || node.disabled){
        		return false;
        	}
        	return true;
        },
        onDrop : function(target, source, point) { // target : 目标节点	source : 被拖动的节点		point : append  top  bottom
        	var node_id = source.id;
			var pnode_id;
			if (point == 'append') {
				var node = P.tree.buptree('getNode', target);
				pnode_id = node.id;
			} else {
				var pnode = P.tree.buptree('getParent', target);
				pnode_id = pnode.id;
			}
			jQuery.ajax({
				url : 'directory.move',
				type : 'post',
				data : { node_id : node_id, pnode_id : pnode_id},
				success : function(rd) {
					if (typeof rd === "string")
						rd = jQuery.parseJSON(rd); 
					if(rd.error){
						jQuery.bupmsg.alert('提示', rd.msg, 'error');
						return;
					}
					//jQuery('#directory').buptree('reload');
				}
			});
        }
		
	});
	
	P.grid.bupgrid({
		url : 'file.search?_=$!{currentTimeMillis}',
		dataType : 'json',
		idField : 'id',
		sortField : 'createAt',
		sortOrder : 'desc',
		showRownum : true,
		showPagebar : true,
		fit : true,
		fitColumns : true,
		pageSize : 20,
		//singleSelect:true,
		//frozenColumns : [ [ {field : 'ck',checkbox : true} ] ],
		columns : [ [ {
			title : '文件名',
			field : 'name',
			width : 550,
			sortable : true
		}, 
/**		{
			title : '类型',
			field : 'type',
			width : 60,
			sortable : true
		}, {
			title : '大小',
			field : 'length',
			width : 70,
			sortable : true
//		}, {
//			title : '扩展名',
//			field : 'ext',
//			width : 70,
//			sortable : true
		}, {
			title : '分享',
			field : 'shared',
			width : 40,
			sortable : true
		}, {
			title : '状态',
			field : 'status',
			width : 60,
			sortable : true
		},
*/		 
		{
			title : '创建人',
			field : 'creatorName',
			width : 60,
			sortable : true
		},

		{
			title : '上传日期',
			field : 'createAt',
			width : 130,
			sortable : true
		}, {
			title : '操作',
			field : 'operation',
			width : 180,
			formatter: function(value,row,index){
				var id = row.id;
				var type = jQuery('#current_file_type').val();
				var ro = "<a class='show_dialog' href='file.detail?id=" + id + "'>查看</a> ";
				if (type == 7) {
				    ro += "<a class='resume' href='/s/file/recyclebin/resume?id=" + id + "'>恢复</a> " 
						 + "<a class='completely_delete' href='/s/file/recyclebin/completely_delete?id=" + id + "'>彻底删除</a> "
				} else {
					if(row.version > 1){
						ro += "<a class='show_dialog' href='file.version?id=" + id + "'>版本</a> " ;
					}
					ro += "<a href='#springUrl('/files/download')?id=" + id + "' target='_blank'>下载</a> ";
					ro += "<a class='show_dialog' href='file.privileges?id=" + id + "'>分享</a> ";
					ro += "<a class='show_dialog' href='file.usergroupshare?id=" + id + "'>组分享</a> ";
					if(row.statusValue !== -1){
						 ro += "<a class='show_dialog' href='file.editor?id=" + id + "'>修改</a> "
						 + "<a class='entity_delete' href='file.delete?ids=" + id + "'>删除</a>";
					 }
						 //+ "<a class='show_dialog' href='/s/document/report/dirfile.do?id=" + id + "'>上报</a>";
			    }
				return ro;
			}
		} ] ],
		toolbar : [ {
			text : '上传文件',
			iconClassname : 'icon_add',
			doClick : function() {
				var node = P.tree.buptree('getSelected');
				if (null == node) {
					alert('请选择文件夹！');
					return;
				} else if (node.id == 0) {
					alert('不允许添加到此文件夹！');
					return;
				}
				//lock("正在加载...");
				P.D.load('file.editor?directory_id=' + node.id);
				return false;
			}
/*		}, {
			text : '删除',
			iconClassname : 'icon-del',
			doClick : function() {
				var node = P.tree.buptree('getSelected');
				if (null == node || node.id == 0) {
					alert('请选择文件所在的文件夹（不能选择\"目录\"节点）！');
					return false;
				}
				
				var rows = P.grid.bupgrid('getSelections');
				if (rows.length == 0) {
					alert("请选择要删除的文件！");
					return;
				}
				if (!confirm("确认删除所选文件？")) {
					return;
				}
				
				var ids = [];
				for ( var i = 0; i < rows.length; i++) {
					ids.push(rows[i].id);
				}
				jQuery.ajax({
					url : 'file.delete',
					type : "post",
					data : {
						ids : '' + ids.join(',') + '', 'node_id' : node.id
					},
					success : function(data) {
						if (data.error) {
							alert(data.msg);
							return;
						}
						fn_reload_dg_condition();
					},
					error : function() {
						alert("删除出错，请重试");
					}
				});
			}*/
		} ],
		onLoadSuccess : function(data, param) {
			jQuery('a.show_dialog').click(function() {
				//lock("正在加载...");
				P.D.load(this.href);
				return false;
			});
			jQuery('a.entity_delete').click(function() {
				var node = P.tree.buptree('getSelected');
				if (null == node || node.id == 0) {
					alert('请选择文件所在的文件夹（不能选择\"目录\"节点）！');
					return false;
				}
				if (!confirm('确认删除此文件？')) {
					return false;
				}
				jQuery.ajax({
					url : this.href + '&node_id=' + node.id,
					type : 'Get',
					data : null,
					success : function(rd) {
						if (typeof rd === "string")
							rd = jQuery.parseJSON(rd);
						if(rd.error){
							jQuery.bupmsg.alert('提示', rd.msg, 'error');
							return;
						}
					//	fn_reload_dg_condition();
					//	 alert(9);
					},
					error : function() {
						alert('删除出错，请重试');
					}
				});
				return false;
			});
			jQuery('a.resume').click(function() {
				if (!confirm('确认恢复此文件？')) {
					return false;
				}
				jQuery.ajax({
					url : this.href,
					type : 'Get',
					data : null,
					success : function(rd) {
						if (typeof rd === "string")
							rd = jQuery.parseJSON(rd);
						if(rd.error){
							jQuery.bupmsg.alert('提示', rd.msg, 'error');
							return;
						}
						fn_reload_dg_condition();
					},
					error : function() {
						alert('恢复出错，请重试');
					}
				});
				return false;
			});
			jQuery('a.completely_delete').click(function() {
				if (!confirm('确认彻底删除此文件？')) {
					return false;
				}
				jQuery.ajax({
					url : this.href,
					type : 'Get',
					data : null,
					success : function(rd) {
						if (typeof rd === "string")
							rd = jQuery.parseJSON(rd);
						if(rd.error){
							jQuery.bupmsg.alert('提示', rd.msg, 'error');
							return;
						}
						fn_reload_dg_condition();
					},
					error : function() {
						alert('恢复出错，请重试');
					}
				});
				return false;
			});
		}
	});
	
	jQuery('.file_type, .file_operator').hover(
		function () {
			if (!jQuery(this).hasClass('active') && !jQuery(this).hasClass('file_operator_close')) {
				jQuery(this).addClass('hover');
			}
		},
		function () {
			if (!jQuery(this).hasClass('active') && !jQuery(this).hasClass('file_operator_close')) {
				jQuery(this).removeClass('hover');
			}
		}
	);
	jQuery('.file_type').click(function() {
		jQuery(this).removeClass('hover');
		jQuery('.file_type').removeClass('active');
		jQuery(this).addClass('active');
		
		fn_clear_condition();
		var type = jQuery(this).find('input').val(); // type -1:全部  -2:最近  0:文档  1:图片  2:音频  3:视频  4:其它
		jQuery('#current_file_type').val(type);
		return fn_reload_dg();
	});
	
	jQuery('#file_move').click(function() {
		//var node = P.tree.buptree('getSelected');
		//if (null == node || node.id == 0)
		//	return false;
			
		fn_file_operator(0);
	});
	
	jQuery('#file_copy').click(function() {
		fn_file_operator(1);
	});

	function fn_file_operator(operator_type) { // operator_type 0:移动  1:复制
		var node = P.tree.buptree('getSelected');
		if(null == node){
			return;
		}
		var node_id = node.id;
		if (node_id == 0) {
			alert('请选择要移动/复制的文件所在的文件夹，"根目录"节点除外！');
			return;
		}
		
		var rows = P.grid.bupgrid('getChecked');
		if (rows.length == 0) {
			alert(operator_type == 0 ? "请选择要移动的文件！" : "请选择要复制的文件！");
			return;
		}
		var arr = [];
		for ( var i = 0; i < rows.length; i++) {
			arr.push(rows[i].id);
		}
		P.D.load('file.operator', { 
			ids : arr.join(','), 
			type : operator_type, 
			source_node_id : node_id
		});
		return false;
	}
	
});
</script>