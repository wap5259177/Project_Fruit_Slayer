<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util-3.2.xsd">
        
	<context:property-placeholder location="classpath:global.properties" ignore-unresolvable="true"/>
	<!-- resquestBody需开启 -->
	<context:annotation-config />
	<!-- 适用于spring3.1 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">  
	        <util:list id="beanList">  
	        	<ref bean="byteArrayHttpMessageConverter"/>
	        	<ref bean="stringHttpMessageConverter"/>
	        	<ref bean="sourceHttpMessageConverter"/>
	            <ref bean="mappingJacksonHttpMessageConverter"/>  
	        </util:list>  
	    </property>
	    <property name="webBindingInitializer">
	    	<bean class="cn.bonoon.kernel.KernelDataBinding"/>
	    </property>
	</bean>
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
	    <property name="supportedMediaTypes">  
	        <list>  
	            <value>text/html;charset=UTF-8</value>  
	        </list>  
	    </property>  
	</bean>
	<bean id="byteArrayHttpMessageConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
	<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="writeAcceptCharset" value="false" />
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
                <value>*/*;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <bean id="sourceHttpMessageConverter" class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />

	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">    
            <list>    
                <bean class="cn.bonoon.kernel.web.views.DateConverter" />    
            </list>
        </property>    
	</bean>
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven conversion-service="conversionService"/>

	<!-- This bean sets up the Velocity environment for us based on a root path 
		for templates. Optionally, a properties file can be specified for more control 
		over the Velocity environment, but the defaults are pretty sane for file 
		based template loading. -->
	<bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="configLocation" value="/WEB-INF/velocity.properties" />
	</bean>

	<!-- View resolvers can also be configured with ResourceBundles or XML files. 
		If you need different view resolving based on Locale, you have to use the 
		resource bundle resolver. -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
		<property name="cache" value="false" />
		<property name="prefix" value="" />
		<property name="suffix" value=".vm" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="exposeRequestAttributes" value="false" />
		<property name="exposeSessionAttributes" value="false" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="attributes">
			<map>
				<entry key="authentication">
					<bean class="cn.bonoon.kernel.security.AuthenticatedUserDetails" />
				</entry>
			</map>
		</property>
	</bean>

	<!-- 静态资源：css,js,image... -->
	<mvc:resources location="/WEB-INF/resources/" mapping="/res/**" />
	<mvc:resources location="/resources/" mapping="/r/**" />
	<mvc:resources location="/upload/" mapping="/upload/**" />
	<mvc:resources location="/html/" mapping="/html/**" />
	<!-- <mvc:resources location="${upload.file.path}" mapping="/upload/**" /> -->

	<!-- 上传文件 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes 500M -->
		<property name="maxUploadSize" value="512000000" />
	</bean>

	<!-- 异常处理 -->
	<bean id="exceptionResolver" class="cn.bonoon.kernel.web.views.BonoonExceptionResolver" />

	<!-- view-controller -->
	<context:component-scan base-package="cn.bonoon.controllers" />
</beans>